import java.util.Stack;

public class StackExample{
    public static void main(String[] args) {
        // StackDataStructure s=new StackDataStructure(5);
        // s.push(10);
        // s.push(20);
        // System.out.println(s.peek());
        // s.push(30);
        // System.out.println(s.pop());
        // System.out.println(s.peek());
        Text editor = new Text();

        editor.addText("Hello, ");
        System.out.println("Current text: " + editor.getText()); // Output: Hello,

        editor.addText("world!");
        System.out.println("Current text: " + editor.getText()); // Output: Hello, world!

        editor.undo();
        System.out.println("Current text: " + editor.getText()); // Output: Hello,

        editor.undo();
        System.out.println("Current text: " + editor.getText()); // Output: (empty)
    }
}
// class StackDataStructure{
//     int maxSize;
//     int[] stack_arr;
//     int top;

//     StackDataStructure(int maxSize){
//         this.maxSize=maxSize;
//         stack_arr=new int[this.maxSize];
//         top=-1;
//     }
//     boolean isFull(){
//         return top==this.maxSize-1;
//     }
//     boolean isEmpty(){
//         return top==-1;
//     }
//     int peek(){
//         if(isEmpty()){
//             System.out.println("Empty");
//             return -1;
//         }
//         return stack_arr[top];
//     }
//     void push(int value){
//         if(isFull()){
//             System.out.println("Full");
//         }else{
//             top++;
//             stack_arr[top]=value;
//         }
//     }
//     int pop(){
//         if(isEmpty()){
//             System.out.println("Empty");
//             return -1;
//         }
//         return stack_arr[top--];
//     }
// }
class Text{
    private String[] stack_arr;
    private String text;

    public Text(){
        this.text=text;
        this.stack_arr=new Stack<>();
    }

    public void addText(String text2){
        stack_arr.push(text.toString());
        text.append(text2);
    }
    public void undo(){
        if(!stack_arr.isEmpty()){
            text=new stack_arr.pop();

        }
        else{
            System.out.println("no more changes to undo.")
        }
    }
    public String getText() {
        return text.toString();
    }
}